name: Android Build and Deployment Pipeline # optional

on: # on [Events]
  # always push on developer's dev branch after then we do PR into feature from dev,
  # and then PR into release from feature, and then PR into master from release
  push:
    branches: [ 'dev/*' ]
  pull_request:
    branches: [ 'release/*', 'feature/*' ]

  # Add support for manual trigger
  workflow_dispatch: # event
    inputs: # provide these below information variables as inputs
      # similar to inputs, we can have outputs, runs -- runs defines what to run before main actions e.g., running
      # scripts, running prerequisites etc.
      app_id:
        description: 'The application Id/package name'
        required: true
      branch:
        description: 'The branch from which you want the build'
        required: true
        default: 'release/v1' # just one default branch, we checkout and build

jobs: # groups
  Android-CI_CD: # job name, any name. Give proper name
    runs-on: ubuntu-latest # runs-on: Runner
    steps: # keyword name
      # follows these steps on order
      - name: Clean Workspace
        uses: AutoModality/action-clean@v1

      - name: Setup Source (checkout etc.)
        uses: actions/checkout@v3 # uses: actions/actual_action
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set up Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Checkstyle
        uses: dbelyaev/action-checkstyle@v0.7.4
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          level: error
          locale: "US"
          reviewdog_flags: -filter-mode=file -fail-on-error

      - name: Build and Generate Apk
        run: ./gradlew app:assembleRelease --stacktrace

  #   STEP 2 : Upload the Artifact
  upload:
    needs: [ Android-CI_CD ]
    name: Upload the signed artifact
    runs-on: self-hosted
    steps:
      - name: Upload Apk
        uses: actions/upload-artifact@v3
        with:
          name: signed_apk
          path: app/build/outputs/apk/retailStage/debug/app-retail-stage-debug.apk