plugins {
    id("com.android.library")
    id("org.jetbrains.kotlin.android")
    id("com.google.dagger.hilt.android")
    id("kotlin-kapt")
    id("maven-publish")
}

apply(from: "$rootDir/config/jacoco/jacoco.gradle")

android {
    namespace = "com.mvi.agemodule"
    compileSdk = 34
    ndkVersion = "25.2.9519653"

    kapt {
        javacOptions {
            option("-Xmaxerrs", 500)
            option("-Xlint:deprecation", true)
            option("-Xlint:unchecked", true)
        }
        arguments {
            arg("plugin", "org.jetbrains.kotlin.kapt3:kotlin-allopen")
            arg("plugin", "org.jetbrains.kotlin.kapt3:kotlin-noarg")
        }
        useBuildCache = true
    }

    lintOptions {
        // Turns off checks for the issue IDs you specify.
        disable("TypographyFractions", "TypographyQuotes")
        // Turns on checks for the issue IDs you specify. These checks are in
        // addition to the default lint checks.
        enable("RtlHardcoded", "RtlCompat", "RtlEnabled")
        // To enable checks for only a subset of issue IDs and ignore all others,
        // list the issue IDs with the 'check' property instead. This property overrides
        // any issue IDs you enable or disable using the properties above.
        checkOnly("NewApi", "InlinedApi")
        // If set to true, turns off analysis progress reporting by lint.
        quiet = true
        // if set to true (default), stops the build if errors are found.
        abortOnError = true
        // if true, only report errors.
        ignoreWarnings = true
    }

    defaultConfig {
        minSdk = 21
        targetSdk = 34

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary = true
        }

        aarMetadata {
            minCompileSdk = 34
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    buildFeatures {
        compose = true
    }

    composeOptions {
        //https://developer.android.com/jetpack/androidx/releases/compose-kotlin
        kotlinCompilerExtensionVersion = "1.4.8"
    }

    packagingOptions {
        resources {
            excludes += "/META-INF/{AL2.0,LGPL2.1}"
        }
    }

    testFixtures {
        enable = true
    }

    //no application id for libraries
    buildTypes {

        debug {
            debuggable = true
            jniDebuggable = true
            minifyEnabled = false
            shrinkResources = false

            matchingFallbacks = ["debug"]
            versionNameSuffix = ".${getBuildNumber()}"
            signingConfig = signingConfigs.debug
        }

        release {
            debuggable = false
            jniDebuggable = false
            minifyEnabled = true
            shrinkResources = false //for libraries
            proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro")

            matchingFallbacks = ["release"]
            versionNameSuffix = ".${getBuildNumber()}"
            signingConfig = signingConfigs.debug
        }

        enterpriseQa {
            initWith(debug) //copies everything from debug buildTypes
            renderscriptDebuggable = true
            renderscriptOptimLevel = 3
            signingConfig = signingConfigs.debug
        }

    }

    publishing {
        //multivariate
        multipleVariants() {
            allVariants()
            withSourcesJar()
            withJavadocJar()
        }
    }
    buildToolsVersion "34.0.0"

}

afterEvaluate {
    publishing {
        publications {
            //coming from multi variants software component
            staging(MavenPublication) {
                from(components.debug)
                groupId = "android.MVI"
                artifactId = "staging.ageModule"
                version = "1.0.0"

            }

        }

        //applies to publishing all
        repositories {
            maven {
                name = "ageModule"
                url = "${project.buildDir}/ageModule"
            }
        }
    }
}


dependencies {
    implementation("androidx.core:core-ktx:$kotlin_version")

    implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.6.1")
    implementation("androidx.activity:activity-compose:1.7.1")
    implementation("androidx.compose.ui:ui:$compose_ui_version")
    implementation("androidx.compose.ui:ui-tooling-preview:$compose_ui_version")
    implementation("androidx.compose.material:material:$compose_ui_version")
    implementation("androidx.test:monitor:1.5.0")

    androidTestImplementation("androidx.compose.ui:ui-test-junit4:$compose_ui_version")
    debugImplementation("androidx.compose.ui:ui-tooling:$compose_ui_version")
    debugImplementation("androidx.compose.ui:ui-test-manifest:$compose_ui_version")
    implementation("androidx.compose.runtime:runtime-livedata:$compose_ui_version")

    //timber
    implementation("com.jakewharton.timber:timber:5.0.1")

    //reactivex
    implementation("io.reactivex.rxjava2:rxandroid:2.1.1")
    implementation("androidx.lifecycle:lifecycle-reactivestreams-ktx:2.6.1")
    implementation("androidx.lifecycle:lifecycle-reactivestreams-ktx:2.6.1")
    implementation("androidx.lifecycle:lifecycle-extensions:2.2.0")
    implementation("androidx.lifecycle:lifecycle-reactivestreams-ktx:2.6.1")

    //dagger hilt
    implementation("com.google.dagger:hilt-android:2.46")
    kapt("com.google.dagger:hilt-compiler:2.46")
    implementation("com.google.dagger:hilt-android:2.46")
    kapt("androidx.hilt:hilt-compiler:1.0.0")
    kapt("com.google.dagger:hilt-android-compiler:2.37")

    //AppCenter
    implementation("com.microsoft.appcenter:appcenter-analytics:4.4.5")
    implementation("com.microsoft.appcenter:appcenter-crashes:4.4.5")

    //testing
    testImplementation("junit:junit:4.13.2")
    androidTestImplementation("androidx.test.ext:junit:1.1.5")
    androidTestImplementation("androidx.test.espresso:espresso-core:3.5.1")
}