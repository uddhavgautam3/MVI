import com.github.spotbugs.snom.SpotBugsTask

buildscript {
    dependencies {
        classpath 'org.jacoco:org.jacoco.core:0.8.7'
    }
    this.&addRepos
}

// Top-level build file where you can add configuration options common to all sub-projects/modules.
//IDE plugins
plugins {
    id 'com.android.application' version '7.3.1' apply false
    id 'com.android.library' version '7.3.1' apply false
    id 'com.google.dagger.hilt.android' version '2.44' apply false
    id 'org.jetbrains.kotlin.android' version '1.8.20' apply false //kotlin IDE plugin for gradle
    id 'maven-publish'
    id 'com.github.spotbugs' version '5.0.14' apply false
}

ext {
    addRepos = this.&addRepos
    compose_ui_version = '1.4.2'
    kotlin_version = '1.6.0'

    deps = dependencies
    room_version = '2.5.1'
}

allprojects {
    apply plugin: 'jacoco'
}

subprojects {
    //spot bugs reports generated only this way
    apply plugin: 'com.github.spotbugs'
    spotbugs {
        toolVersion = '4.2.3'
    }

    tasks.withType(SpotBugsTask) {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }


    //checkstyle, pmd, and spotbugs all run during ./gradlew check
    //includes checkstyle, pmd, and spotbugs
    apply from: "$project.rootDir/config/codequality.gradle"
    afterEvaluate {
        //syntax: gradleTask.dependsOn(otherGradleTask)
        //before build of any subproject taskCheckStyle should run
        preBuild.dependsOn('taskCheckStyle')
        //we test and check the same testCheckStyle task to see its integrity
        check.dependsOn('taskCheckStyle')
        preBuild.dependsOn('taskPmd')
        check.dependsOn('taskPmd')
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}


static String getBuildNumber() {
    return getPropertyOrEnv('BUILD_NUMBER', 'LocalDebug')
}

static String getPropertyOrEnv(name, defaultValue = '') {
    def prop = System.properties[name]
    if (prop == null) {
        prop = System.getenv(name)
    }
    if (prop == null) {
        return defaultValue
    }
    return prop
}

static def addRepos(RepositoryHandler repositoryHandler) {
    repositoryHandler.mavenCentral()
    repositoryHandler.google()
    repositoryHandler.maven { url 'https://plugins.gradle.org/m2/'}
    repositoryHandler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}